{% comment %}
  Renders a list of product's price (regular, sale)

  Accepts:
  - product: {Object} Product Liquid object (optional)
  - use_variant: {Boolean} Use selected/first available variant price (optional)
  - price_class: {String} Additional class for the root element (optional)

  Usage:
  {% render 'price', product: product, use_variant: true, price_class: 'price--size-md price--color-text' %}
{% endcomment %}

{%- liquid
  assign target = product
  if use_variant
    assign target = product.selected_or_first_available_variant
  endif

  assign price = target.price | default: 1999
  assign compare_at_price = target.compare_at_price
  assign available = target.available | default: false

  assign money_price = price | money
  if settings.currency_code_enabled
    assign money_price = price | money_with_currency
  endif

  # on_sale only when compare_at exists and greater than price
  assign on_sale = false
  if compare_at_price and compare_at_price > price
    assign on_sale = true
  endif

  # discount only if on_sale (avoids divide-by-zero/NaN)
  assign discount_percentage = 0
  if on_sale
    assign discount_percentage = compare_at_price | minus: price | times: 100.0 | divided_by: compare_at_price | round: 0
  endif

  # “From” label when showing product-wide price range
  if target == product and product.price_varies
    assign money_price = 'products.product.price.from_price_html' | t: price: money_price
  endif

  assign money_compare = compare_at_price | money
  if settings.currency_code_enabled
    assign money_compare = compare_at_price | money_with_currency
  endif

  assign upm = target.unit_price_measurement
-%}

<div class="price{% if price_class %} {{ price_class }}{% endif %}{% unless available %} price--sold-out{% endunless %}{% if on_sale %} price--on-sale{% endif %}{% if product.price_varies == false and product.compare_at_price_varies %} price--no-compare{% endif -%}">
  <div class="price__container">
    {%- comment -%}
    CSS handles visibility:
      - .price__regular shown normally, hidden when .price--on-sale
      - .price__sale shown when .price--on-sale
    {%- endcomment -%}

    <div class="price__regular">
      <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
      <span class="price-item price-item--regular">
        {{ money_price }}
      </span>
    </div>

    <div class="price__sale">
      <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.sale_price' | t }}</span>
      <span class="price-item price-item--sale">
        {{ money_price }}
      </span>

      {%- unless product.price_varies == false and product.compare_at_price_varies -%}
        <span class="visually-hidden visually-hidden--inline">{{ 'products.product.price.regular_price' | t }}</span>
        <span class="price-item--last">
          <s class="price-item price-item--regular">
            {{ money_compare }}
          </s>
        </span>

        {%- if settings.show_discount_badges and discount_percentage > 0 -%}
          <span class="discount-badge badge text-color-secondary background--sale">
            {{ discount_percentage }}% {{ 'products.product.off' | t: default: 'Off' }}
          </span>
        {%- endif -%}
      {%- endunless -%}
    </div>

    <small class="unit-price caption{% if upm == nil %} hidden{% endif %}">
      <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
      <span class="price-item price-item--last">
        <span>{{- target.unit_price | money -}}</span>
        <span aria-hidden="true">/</span>
        <span class="visually-hidden">&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span>
        <span>
          {%- if upm and upm.reference_value and upm.reference_value != 1 -%}
            {{- upm.reference_value -}}
          {%- endif -%}
          {%- if upm -%}{{ upm.reference_unit }}{%- endif -%}
        </span>
      </span>
    </small>
  </div>
</div>
